pipeline {
    agent any
    stages {
        stage('Initialize') {
            steps {
                script {
                    def dockerHome = tool 'docker-latest'
                    env.PATH = "${dockerHome}/bin:${env.PATH}"
                }
                checkout scm
            }
        }
        
        stage('Build') {
            agent {
                docker {
                    image 'maven:3.9.0'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        
        stage('Test') {
            agent {
                docker {
                    image 'maven:3.9.0'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Deliver') {
            agent {
                docker {
                    image 'maven:3.9.0'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
        stage('Build Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-repo', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                    sh '/usr/bin/docker build -t maulana48/simple-java-maven-app .'
                    sh "echo $PASS | /usr/bin/docker login -u $USER --password-stdin"
                    sh '/usr/bin/docker push maulana48/simple-java-maven-app'
                }
            }
        }
        stage('Manual Approval') {
            steps {
      		    // Create an Approval Button with a timeout of 15minutes.
                timeout(time: 2, unit: "MINUTES") {
                    input message: 'Lanjutkan ke tahap Deploy?', ok: 'Yes'
	            }
                		
	            echo "Initiating deployment"
            }
        }
        stage('Deploy') {
            steps {
                script {
                    def dockerCmd = '/usr/bin/docker run  -p 8080:8080 --name myjava-app -d maulana48/simple-java-maven-app:latest'
                    sshagent(['maulana48-ec2']) {
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@13.215.184.4 ${dockerCmd}"
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@13.215.184.4 /usr/bin/docker exec myjava-app java -jar my-app-1.0-SNAPSHOT.jar"
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@13.215.184.4 sleep 1m"
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@13.215.184.4 /usr/bin/docker stop myjava-app"
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@13.215.184.4 /usr/bin/docker rm myjava-app"
                    }
                }
            }
        }
    }
}
